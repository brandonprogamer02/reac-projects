[{"C:\\Users\\progamer9999\\Desktop\\react-projects-master\\gesty-app\\src\\index.tsx":"1","C:\\Users\\progamer9999\\Desktop\\react-projects-master\\gesty-app\\src\\reportWebVitals.ts":"2","C:\\Users\\progamer9999\\Desktop\\react-projects-master\\gesty-app\\src\\App.tsx":"3","C:\\Users\\progamer9999\\Desktop\\react-projects-master\\gesty-app\\src\\redux\\store\\store.ts":"4","C:\\Users\\progamer9999\\Desktop\\react-projects-master\\gesty-app\\src\\redux\\reducers\\materiasRenderizado.reducer.ts":"5","C:\\Users\\progamer9999\\Desktop\\react-projects-master\\gesty-app\\src\\redux\\reducers\\cuatrimestre.reducer.ts":"6","C:\\Users\\progamer9999\\Desktop\\react-projects-master\\gesty-app\\src\\redux\\middleware\\middleware.ts":"7","C:\\Users\\progamer9999\\Desktop\\react-projects-master\\gesty-app\\src\\components\\MainComponent\\MainComponent.tsx":"8","C:\\Users\\progamer9999\\Desktop\\react-projects-master\\gesty-app\\src\\redux\\actions\\cuatrimestre.action.ts":"9","C:\\Users\\progamer9999\\Desktop\\react-projects-master\\gesty-app\\src\\redux\\actions\\materiaSeleccionado.action.ts":"10","C:\\Users\\progamer9999\\Desktop\\react-projects-master\\gesty-app\\src\\LocalStorage.ts":"11","C:\\Users\\progamer9999\\Desktop\\react-projects-master\\gesty-app\\src\\components\\MainComponent\\MainComponentStyled.ts":"12","C:\\Users\\progamer9999\\Desktop\\react-projects-master\\gesty-app\\src\\redux\\maps\\cuatrimestre.map.ts":"13","C:\\Users\\progamer9999\\Desktop\\react-projects-master\\gesty-app\\src\\components\\Cuatrimestre\\Cuatrimestre.tsx":"14","C:\\Users\\progamer9999\\Desktop\\react-projects-master\\gesty-app\\src\\components\\Cuatrimestre\\CuatrimestreStyled.ts":"15","C:\\Users\\progamer9999\\Desktop\\react-projects-master\\gesty-app\\src\\utils.ts":"16","C:\\Users\\progamer9999\\Desktop\\react-projects-master\\gesty-app\\src\\components\\Cuatrimestre\\Materia.tsx":"17","C:\\Users\\progamer9999\\Desktop\\react-projects-master\\gesty-app\\src\\ApiMaterias.ts":"18"},{"size":584,"mtime":1610742567934,"results":"19","hashOfConfig":"20"},{"size":425,"mtime":1610578052000,"results":"21","hashOfConfig":"20"},{"size":444,"mtime":1610674989073,"results":"22","hashOfConfig":"20"},{"size":565,"mtime":1610834460458,"results":"23","hashOfConfig":"20"},{"size":1145,"mtime":1610907754030,"results":"24","hashOfConfig":"20"},{"size":3797,"mtime":1610913337737,"results":"25","hashOfConfig":"20"},{"size":1733,"mtime":1610913551943,"results":"26","hashOfConfig":"20"},{"size":2716,"mtime":1611714836431,"results":"27","hashOfConfig":"20"},{"size":3227,"mtime":1611548543762,"results":"28","hashOfConfig":"20"},{"size":952,"mtime":1610906657682,"results":"29","hashOfConfig":"20"},{"size":1432,"mtime":1610844428369,"results":"30","hashOfConfig":"20"},{"size":1958,"mtime":1611766621720,"results":"31","hashOfConfig":"20"},{"size":1384,"mtime":1610910844629,"results":"32","hashOfConfig":"20"},{"size":2947,"mtime":1611766227443,"results":"33","hashOfConfig":"20"},{"size":2197,"mtime":1611766658631,"results":"34","hashOfConfig":"20"},{"size":70,"mtime":1610843738514,"results":"35","hashOfConfig":"20"},{"size":3021,"mtime":1610913157329,"results":"36","hashOfConfig":"20"},{"size":2531,"mtime":1610675145314,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"fosk6k",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"40"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"40"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"40"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"40"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"79"},"C:\\Users\\progamer9999\\Desktop\\react-projects-master\\gesty-app\\src\\index.tsx",[],["80","81"],"C:\\Users\\progamer9999\\Desktop\\react-projects-master\\gesty-app\\src\\reportWebVitals.ts",[],"C:\\Users\\progamer9999\\Desktop\\react-projects-master\\gesty-app\\src\\App.tsx",[],"C:\\Users\\progamer9999\\Desktop\\react-projects-master\\gesty-app\\src\\redux\\store\\store.ts",[],"C:\\Users\\progamer9999\\Desktop\\react-projects-master\\gesty-app\\src\\redux\\reducers\\materiasRenderizado.reducer.ts",[],"C:\\Users\\progamer9999\\Desktop\\react-projects-master\\gesty-app\\src\\redux\\reducers\\cuatrimestre.reducer.ts",[],"C:\\Users\\progamer9999\\Desktop\\react-projects-master\\gesty-app\\src\\redux\\middleware\\middleware.ts",["82"],"import { State } from '../types/generalTypes'\r\nimport { CuatrimestreAction, CuatrimestreDispatch } from '../types/cuatrimestre'\r\nimport { materiaRenderizadoAction } from '../types/materiaRenderizado'\r\nimport { Store } from 'redux'\r\nimport { replaceLocalStorage } from '../../LocalStorage'\r\nimport { ADD_MATERIA, DELETE_MATERIA, UPDATE_MATERIA } from '../actions/cuatrimestre.action'\r\nimport { nuevaMateria, borrarMateria, updateMateria } from '../actions/materiaSeleccionado.action'\r\n\r\ntype Action = CuatrimestreAction | materiaRenderizadoAction\r\ntype Middlerware = (store: any) => (next: CuatrimestreDispatch) => (action: CuatrimestreAction) => void\r\n\r\nconst middleware: Middlerware = (store: Store) => next => action => {\r\n    // console.log('se esta tirando una accion', action.type)\r\n\r\n    // ME QUEDE HACIENDO QUE ESTO FUNCIONARA EL MIDDLEWARE PARA QUE SE CARGARA EL OTRO ESTADO\r\n\r\n    // actualizamos el estado de materiasRenderizado\r\n    if (action.type === ADD_MATERIA) {\r\n        store.dispatch(nuevaMateria(action.payload.actionMateria.materia))\r\n    }\r\n    else if (action.type === DELETE_MATERIA) {\r\n        console.log(action.payload.actionMateria.materia)\r\n        store.dispatch(borrarMateria(action.payload.actionMateria.materia))\r\n    }\r\n    else if (action.type === UPDATE_MATERIA) {\r\n        // ahi que ver que esta entrando por parte del materiaRenderizado\r\n        const id = action.payload.actionMateria.materia.id\r\n        const materia = action.payload.actionMateria.materia\r\n        store.dispatch(updateMateria(id, materia))\r\n    }\r\n\r\n    next(action)\r\n\r\n    setTimeout(() => {\r\n        const state: State = store.getState()\r\n        replaceLocalStorage(state)\r\n    }, 500)\r\n\r\n}\r\n\r\nexport default middleware","C:\\Users\\progamer9999\\Desktop\\react-projects-master\\gesty-app\\src\\components\\MainComponent\\MainComponent.tsx",["83","84","85"],"import React, { useState, useEffect, useReducer } from 'react'\nimport Cuatrimestre from '../Cuatrimestre/Cuatrimestre'\nimport { DivMainContainer, DivParentContainer, DivCuatrimestres, LabelPromedioHistorico, ButtonNuevoCuatrimestre, Titulo, GlobalStyles } from './MainComponentStyled'\nimport { typeDataCuatrimestre } from '../../LocalStorage'\nimport { mapStateToProps, mapDispatchToProps } from '../../redux/maps/cuatrimestre.map'\nimport { connect } from 'react-redux'\nimport { Props } from '../../redux/types/generalTypes'\nimport { getLocalStorage } from '../../LocalStorage'\n\nconst MainComponent = (props: Props) => {\n   const { addCuatrimestre, cuatrimestres, replaceCuatrimestres } = props\n   const [promedioHistorico, setPromedioHistorico] = useState(0)\n\n   useEffect(() => setPromedioHistorico(getPromedioHistorico()))\n\n   useEffect(() => {\n      // aqui cargamos la data del local storage\n      const data = getLocalStorage().cuatrimestres\n      replaceCuatrimestres(data ? data : [[]])\n   }, [])\n\n   const getPromedioHistorico = () => {\n      let notaParcial = 0;\n      let cantidadCreditos = 0;\n      cuatrimestres.forEach(cuatrimestre => {\n         cuatrimestre.forEach(materia => {\n            let notaVuelta = 0;\n            if (materia.calificacion >= 90) notaVuelta += 4;\n            else if (materia.calificacion >= 80) notaVuelta += 3;\n            else if (materia.calificacion >= 70) notaVuelta += 2;\n            else notaVuelta += 1;\n            const res = materia.creditos * notaVuelta;\n            notaParcial += res;\n            cantidadCreditos += materia.creditos;\n         })\n      })\n      const resultado = notaParcial / cantidadCreditos\n      return Number(resultado.toFixed(2))\n   };\n\n   const nuevoCuatrimestre = () => {\n      const newCuatrimestre: typeDataCuatrimestre = []\n      addCuatrimestre(newCuatrimestre)\n   }\n\n\n   return (\n\n      <DivParentContainer>\n         <div className=\"container-fluid  vh-100 d-flex\">\n            <GlobalStyles />\n            <DivMainContainer>\n               <Titulo>Gesty App - Brandox</Titulo>\n               <DivCuatrimestres>\n                  {cuatrimestres.map((element, index) => (\n\n                     <Cuatrimestre key={index} indice={index} />\n                  ))}\n                  <ButtonNuevoCuatrimestre onClick={nuevoCuatrimestre} >\n                     + <br />Nuevo Cuatrimestre\n               </ButtonNuevoCuatrimestre>\n               </DivCuatrimestres>\n               <LabelPromedioHistorico> Tu Promedio Historico es de {promedioHistorico} </LabelPromedioHistorico>\n            </DivMainContainer>\n\n         </div>\n      </DivParentContainer>\n\n\n   )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MainComponent)","C:\\Users\\progamer9999\\Desktop\\react-projects-master\\gesty-app\\src\\redux\\actions\\cuatrimestre.action.ts",[],"C:\\Users\\progamer9999\\Desktop\\react-projects-master\\gesty-app\\src\\redux\\actions\\materiaSeleccionado.action.ts",[],"C:\\Users\\progamer9999\\Desktop\\react-projects-master\\gesty-app\\src\\LocalStorage.ts",[],"C:\\Users\\progamer9999\\Desktop\\react-projects-master\\gesty-app\\src\\components\\MainComponent\\MainComponentStyled.ts",[],"C:\\Users\\progamer9999\\Desktop\\react-projects-master\\gesty-app\\src\\redux\\maps\\cuatrimestre.map.ts",[],"C:\\Users\\progamer9999\\Desktop\\react-projects-master\\gesty-app\\src\\components\\Cuatrimestre\\Cuatrimestre.tsx",["86","87"],"import React, { useEffect, useReducer, useState, useContext } from 'react'\nimport { connect } from 'react-redux'\nimport { DivParentContainer, DivTable, Button, DivTituloContainer, TableMaterias, LabelPromedioCuatrimestral, BotonCerrarCuatrimestre } from './CuatrimestreStyled'\nimport Materia from './Materia'\nimport { IPropsCuatrimestre } from './types'\nimport { typeMateria } from '../../LocalStorage'\nimport { mapStateToProps, mapDispatchToProps } from '../../redux/maps/cuatrimestre.map'\nimport { generateId } from '../../utils'\n\n\nconst Cuatrimestre = (props: IPropsCuatrimestre) => {\n   const { indice, deleteCuatrimestre, addMateria, cuatrimestres } = props\n   const cuatrimestre = cuatrimestres[indice]\n   const [promedioCuatrimestral, setPromedioCuatrimestral] = useState(0);\n\n   useEffect(() => {\n      calcularPromedio()\n   });\n\n   const _addMateria = () => {\n      const nuevaMateria: typeMateria = { calificacion: 0, creditos: 0, nombre: '', id: generateId(), indice: 0 }\n      addMateria(indice, nuevaMateria)\n   };\n\n   const calcularPromedio = () => {\n      let notaParcial = 0;\n      let cantidadCreditos = 0;\n      cuatrimestre.forEach(elemento => {\n         const { calificacion, creditos } = elemento;\n         let notaVuelta = 0;\n         if (calificacion >= 90) notaVuelta += 4;\n         else if (calificacion >= 80) notaVuelta += 3;\n         else if (calificacion >= 70) notaVuelta += 2;\n         else notaVuelta += 1;\n         const res = creditos * notaVuelta;\n         notaParcial += res;\n         cantidadCreditos += creditos;\n      });\n\n      const resultado = notaParcial / cantidadCreditos\n      setPromedioCuatrimestral(Number(resultado.toFixed(2)))\n   };\n\n   const handlerEliminarCuatrimestre = () => {\n      deleteCuatrimestre(indice)\n   };\n\n   return (\n      <DivParentContainer>\n         <DivTituloContainer>\n            <label>Cuatrimestre {indice + 1}</label>\n            <div>\n               <Button onClick={_addMateria} className='badge  text-wrap '\n               >Nueva Materia</Button>\n               <BotonCerrarCuatrimestre onClick={handlerEliminarCuatrimestre} >X</BotonCerrarCuatrimestre>\n            </div>\n         </DivTituloContainer>\n         <DivTable>\n            <TableMaterias>\n               <thead>\n                  <tr>\n                     <th>Materia</th>\n                     <th>Creditos</th>\n                     <th>Calificacion</th>\n                  </tr>\n               </thead>\n               <tbody>\n                  {cuatrimestre.map((element, index) => (<Materia indice={index} key={index} indiceCuatrimestre={indice} dataMateria={cuatrimestre[index]} />))}\n               </tbody>\n            </TableMaterias>\n         </DivTable>\n         <LabelPromedioCuatrimestral>Tu Promedio En este cuatrimestre fue es de {promedioCuatrimestral}</LabelPromedioCuatrimestral>\n\n      </DivParentContainer>\n   )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Cuatrimestre) ","C:\\Users\\progamer9999\\Desktop\\react-projects-master\\gesty-app\\src\\components\\Cuatrimestre\\CuatrimestreStyled.ts",[],"C:\\Users\\progamer9999\\Desktop\\react-projects-master\\gesty-app\\src\\utils.ts",[],"C:\\Users\\progamer9999\\Desktop\\react-projects-master\\gesty-app\\src\\components\\Cuatrimestre\\Materia.tsx",["88","89","90"],"import React, { useState, useEffect } from 'react'\nimport { SelectMateria, InputCalificacion, TrMateriaPadre, BotonCerrarMateria } from './CuatrimestreStyled'\nimport ApiMaterias, { typeApiMateria } from '../../ApiMaterias'\nimport { IPropsMateria } from './types'\nimport { typeMateria } from '../../LocalStorage'\nimport { connect } from 'react-redux'\nimport { mapStateToProps, mapDispatchToProps } from '../../redux/maps/cuatrimestre.map'\n\n\nconst Materia = (props: IPropsMateria) => {\n   const { indice, dataMateria, indiceCuatrimestre, deleteMateria, updateMateria, materiaRenderizado } = props\n\n   const [selectMateria, setSelectMateria] = useState('');\n   const [creditos, setCreditos] = useState(0);\n   const [calificacion, setCalificacion] = useState(0)\n   // const [materiaARenderizar, setMateriasARenderizar] = useState<typeApiMateria[]>([])\n\n   useEffect(() => {\n      const dataReal: typeMateria = { creditos, calificacion, nombre: selectMateria, id: dataMateria.id, indice }\n      updateMateria(indiceCuatrimestre, indice, dataReal)\n   }, [selectMateria, calificacion]);\n\n   useEffect(() => {\n      setSelectMateria(dataMateria.nombre)\n      setCreditos(dataMateria.creditos)\n      setCalificacion(dataMateria.calificacion)\n\n\n   }, [dataMateria]);\n\n   // useEffect(() => {\n   //    const newState = ApiMaterias.filter(materia => {\n   //       const retorno = materiaRenderizado.some(materia_ => materia.materia === materia_.nombre)\n   //       if (retorno) return false\n   //       else return true\n   //    })\n   //    console.log(newState)\n   //    setMateriasARenderizar(newState)\n   // }, [dataMateria])\n\n\n   const handlerInputCalificacion = (value: string) => setCalificacion(Number(value));\n\n   const handlerSelect = (value: string) => {\n      // actualizamos el select con el valor qu nos llega del event\n      setSelectMateria(value)\n      // actualizamos el credito con el credito que es\n      ApiMaterias.forEach(element => element.materia === value && setCreditos(element.creditos))\n   };\n\n   const handlerBorrarMateria = () => {\n      const materia: typeMateria = { creditos, calificacion, nombre: selectMateria, id: dataMateria.id, indice }\n      deleteMateria(indiceCuatrimestre, indice, materia)\n   }\n\n   return (\n      <TrMateriaPadre>\n         <td>\n            <SelectMateria onChange={(event) => handlerSelect(event.currentTarget.value)}\n               value={selectMateria}\n            >\n               {ApiMaterias.map((element, index) => {\n                  return <option key={index} > {element.materia} </option>\n               })}\n            </SelectMateria>\n         </td>\n         <td>{creditos}</td>\n         <td>\n            <InputCalificacion placeholder='Nota' value={calificacion}\n               onChange={(e) => handlerInputCalificacion(e.currentTarget.value)}\n            />\n            <BotonCerrarMateria onClick={handlerBorrarMateria} >X</BotonCerrarMateria>\n         </td>\n      </TrMateriaPadre>\n\n   )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Materia)","C:\\Users\\progamer9999\\Desktop\\react-projects-master\\gesty-app\\src\\ApiMaterias.ts",[],["91","92"],{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","severity":1,"message":"98","line":9,"column":6,"nodeType":"99","messageId":"100","endLine":9,"endColumn":12},{"ruleId":"97","severity":1,"message":"101","line":1,"column":38,"nodeType":"99","messageId":"100","endLine":1,"endColumn":48},{"ruleId":"102","severity":1,"message":"103","line":14,"column":4,"nodeType":"99","endLine":14,"endColumn":13,"suggestions":"104"},{"ruleId":"102","severity":1,"message":"105","line":20,"column":7,"nodeType":"106","endLine":20,"endColumn":9,"suggestions":"107"},{"ruleId":"97","severity":1,"message":"101","line":1,"column":28,"nodeType":"99","messageId":"100","endLine":1,"endColumn":38},{"ruleId":"97","severity":1,"message":"108","line":1,"column":50,"nodeType":"99","messageId":"100","endLine":1,"endColumn":60},{"ruleId":"97","severity":1,"message":"109","line":3,"column":23,"nodeType":"99","messageId":"100","endLine":3,"endColumn":37},{"ruleId":"97","severity":1,"message":"110","line":11,"column":83,"nodeType":"99","messageId":"100","endLine":11,"endColumn":101},{"ruleId":"102","severity":1,"message":"111","line":21,"column":7,"nodeType":"106","endLine":21,"endColumn":36,"suggestions":"112"},{"ruleId":"93","replacedBy":"113"},{"ruleId":"95","replacedBy":"114"},"no-native-reassign",["115"],"no-negated-in-lhs",["116"],"@typescript-eslint/no-unused-vars","'Action' is defined but never used.","Identifier","unusedVar","'useReducer' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setPromedioHistorico'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [getPromedioHistorico] as a second argument to the useEffect Hook.",["117"],"React Hook useEffect has a missing dependency: 'replaceCuatrimestres'. Either include it or remove the dependency array.","ArrayExpression",["118"],"'useContext' is defined but never used.","'typeApiMateria' is defined but never used.","'materiaRenderizado' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'creditos', 'dataMateria.id', 'indice', 'indiceCuatrimestre', and 'updateMateria'. Either include them or remove the dependency array.",["119"],["115"],["116"],"no-global-assign","no-unsafe-negation",{"desc":"120","fix":"121"},{"desc":"122","fix":"123"},{"desc":"124","fix":"125"},"Add dependencies array: [getPromedioHistorico]",{"range":"126","text":"127"},"Update the dependencies array to be: [replaceCuatrimestres]",{"range":"128","text":"129"},"Update the dependencies array to be: [selectMateria, calificacion, creditos, dataMateria.id, indice, updateMateria, indiceCuatrimestre]",{"range":"130","text":"131"},[823,823],", [getPromedioHistorico]",[1000,1002],"[replaceCuatrimestres]",[1048,1077],"[selectMateria, calificacion, creditos, dataMateria.id, indice, updateMateria, indiceCuatrimestre]"]